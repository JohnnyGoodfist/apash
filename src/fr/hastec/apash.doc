#!/usr/bin/env bash

##/
# @name apash.doc
# @brief Generate apash documentation.
# @description
#     Generate the different Markdown documentations.
#
# ## History
# @since 0.1.0 (hastec-fr)
#
# ## Interface
# @apashPackage
#
# ### Full Methods Summary Table
# | Methods                  | Brief                                 |
# |--------------------------|---------------------------------------|
# |apash.doc.getPathFromMethod|Allow to generate relative path from method location|
# |getFullSummaryTable|Generate Markdown file with all methods available|
# |apash.substitutePlaceHolders|Allow to substitute placehoders in script file by dynamic informations|
# |apash.doc|Generate all the documentation|
#/
apash.import fr.hastec.apash.commons-lang.StringUtils.split
apash.import fr.hastec.apash.commons-lang.StringUtils.endsWith

# Count the number of parent directory until apash root dir
# Then loop on the directory to rebuild the path with relative path
# for each directory.
# apash / commons-lang / ...
apash.doc.getPathFromMethod(){
  local package="${1:-}"
  local prefix="${2:-"src/fr/hastec/"}"
  local relativePackage="${package/#$prefix/}"
  local -a dirs=()
  local -i i count
  local row dir parentDir

  StringUtils.split dirs "$relativePackage" "/"
  # If it's the root package src/fr/hastec then just display None.
  count=$(echo "$relativePackage" | tr -cd "$/" | wc -c)
  row=""
  for dir in "${dirs[@]}"; do
    parentDir="../"
    for (( i=0; i < count; i++ )); do parentDir+="../"; done
    row+="[$dir]($parentDir$dir.md) / "
    ((count--))
  done
  echo "$row"
}

apash.doc.getFullSummaryTable(){
  local APASH_DOC_HEADER
  local APASH_DOC_FOOTER
  local fstFile="$APASH_HOME_DIR/doc/fr/hastec/apacheFullSummaryTable.md"
  local rootPackage=""
  local methodPath=""
  local cumulatedDir=""
  local -a dirs=()
  local rows
  local brief
  local f # file without full system path

  APASH_DOC_HEADER="$(apash.doc.getHeader)"
  APASH_DOC_FOOTER="$(apash.doc.getFooter)"

  # Generate Header:
  rows+="| Methods                  | Brief                                 |\n"
  rows+="|--------------------------|---------------------------------------|\n"

  while  IFS= read -r -d '' file; do
    brief=$(grep -m 1 "@brief" "$file" | sed 's/^.*@brief //1' )
    rootPackage=$(echo "$file" | sed "s|^$APASH_HOME_DIR/src/fr/hastec/||g")
    methodPath=""
    cumulatedDir=""
    StringUtils.split dirs "$rootPackage" "/"
    for dir in "${dirs[@]}"; do
      if StringUtils.endsWith $dir ".sh"; then
        methodPath+="[${dir/.sh/}](${cumulatedDir}${dir/.sh/}.md)"
      else
        methodPath+="[$dir](${cumulatedDir}$dir.md) / "
        cumulatedDir+="$dir/"
      fi
    done
    rows+="| $methodPath | $brief |\n"
  done < <(find "$APASH_HOME_DIR/src" -type f -name "*.sh" -print0 | LC_ALL=C sort -z)
  # shellcheck disable=SC2001
  echo "$APASH_DOC_HEADER" | sed "s|{{apash-logo}}|../../../assets/apash-logo.svg|1" > "$fstFile"
  echo -e "\n$rows" >> "$fstFile"
  echo "$APASH_DOC_FOOTER" >> "$fstFile"
}

apash.doc.getHeader(){
echo """
<div align='center' id='apash-top'>
  <a href='https://github.com/hastec-fr/apash'>
    <img alt='apash-logo' src='{{apash-logo}}'/>
  </a>

  # Apash
</div>
"""
}

apash.doc.getFooter(){
echo """
  <div align='right'>[ <a href='#apash-top'>↑ Back to top ↑</a> ]</div>
"""
}

apash.substitutePlaceHolders() {
  local placeHolder=$1
  local placeHolders=""
  placeHolders=$(grep -rl "apash\.${placeHolder}" --include \*.md | LC_ALL=C sort)
  local relativeFile

  while read -r p; do
    relativeFile=$(echo "${p}" | sed "s|^$APASH_HOME_DIR/||")
    class=$(basename "$relativeFile" | sed 's/\.md//')
    package=$(dirname "$relativeFile")
    srcPackage="${package/#doc/src}"
    rows="<!-- apash.${placeHolder}Begin -->\n"

    if [ "${placeHolder}" = "summaryTable" ]; then
      # For each script contains in the corresponding package directory
      # Create a line where the method is the name of the script without .md and its brief content.
      rows+="| Methods                  | Brief                                 |\n"
      rows+="|--------------------------|---------------------------------------|\n"
      if [ -d "$srcPackage/$class" ] &&
         { [ "$APASH_SHELL" = "bash" ] || { [ "$APASH_SHELL" = "zsh" ] && [ -n "$(print -l $srcPackage/$class/*.sh(N))" ]; }; }; then
        while IFS= read -r -d '' f; do
          [ ! -r "$f" ] && continue
          method=$(basename "$f"  | sed 's/\.sh//')
          brief=$(grep -m 1 "@brief" "$f" | sed 's/^.*@brief //1' )
          row="[${method//|/\|}]($class/${method}.md)|${brief//|/\|}|"
          rows+="|$row\n"
        done < <(find "$srcPackage/$class" -maxdepth 1 -type f -name "*.sh" -print0 | LC_ALL=C sort -z)
      fi
    elif [ "$placeHolder" = "package" ]; then
      rootPackage=${package/#doc\/fr\/hastec/}
      # If it's the root package src/fr/hastec then just display None.
      if [ -z "$rootPackage" ]; then
        row="None."
      else
        row="$(apash.doc.getPathFromMethod "$srcPackage")"
      fi
      rows+="$row\n"
    fi
    rows+="<!-- apash.${placeHolder}End -->"
    sed -i "/apash.${placeHolder}Begin/,/apash.${placeHolder}End/c\
    $rows
    " "$p"
  done <<< "$placeHolders"
}

apash.doc() {
  local APASH_DOC_HEADER
  local APASH_DOC_FOOTER
  
  APASH_DOC_HEADER="$(apash.doc.getHeader)"
  APASH_DOC_FOOTER="$(apash.doc.getFooter)"

  # Generate individuals scripts documents
  APASH_DOC_HEADER="$APASH_DOC_HEADER" APASH_DOC_FOOTER="$APASH_DOC_FOOTER" \
  find "$APASH_HOME_DIR/src/fr" -type f -name "*.sh" -exec $APASH_SHELL -c '
    file_path="$(dirname "${1:-}")"
    file_name="$(basename "${1:-}")"
    doc_path="$(echo $file_path | sed "s|$APASH_HOME_DIR/src|$APASH_HOME_DIR/doc|1")"
    doc_name="${file_name%.sh}.md"
    root_relative_dir="../$(echo "$file_path" | sed "s|.*/src/||1" | sed "s|[^/]*|..|g")"
    mkdir -p "$doc_path"
    echo "$APASH_DOC_HEADER" | sed "s|{{apash-logo}}|$root_relative_dir/assets/apash-logo.svg|1" > "$doc_path/$doc_name"
    echo >> "$doc_path/$doc_name"
    . "$APASH_HOME_DIR/apash.source"
    apash.import fr.hastec.apash.commons-lang.ApashUtils.doc
    ApashUtils.doc "$file_path/$file_name" >> "$doc_path/$doc_name"
    echo "$APASH_DOC_FOOTER" >> "$doc_path/$doc_name"
    echo >> "$doc_path/$doc_name"
  ' shell {} \;

  # Update placeholders generated by the documentation.
  apash.substitutePlaceHolders summaryTable
  apash.substitutePlaceHolders package
  apash.doc.getFullSummaryTable

}
